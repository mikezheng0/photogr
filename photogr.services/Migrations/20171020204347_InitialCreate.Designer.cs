// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Photogr.Services.Data;
using System;

namespace Photogr.Services.Migrations
{
    [DbContext(typeof(PhotogrContext))]
    [Migration("20171020204347_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Photogr.Services.Models.Album", b =>
                {
                    b.Property<int>("AlbumID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("UserID");

                    b.HasKey("AlbumID");

                    b.HasIndex("UserID");

                    b.ToTable("Album");
                });

            modelBuilder.Entity("Photogr.Services.Models.Photo", b =>
                {
                    b.Property<int>("PhotoID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AlbumID");

                    b.Property<long>("Clicks");

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("Description");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastUpdatedDate");

                    b.Property<string>("Title");

                    b.HasKey("PhotoID");

                    b.HasIndex("AlbumID");

                    b.ToTable("Photo");
                });

            modelBuilder.Entity("Photogr.Services.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd();

                    b.HasKey("UserID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Photogr.Services.Models.Album", b =>
                {
                    b.HasOne("Photogr.Services.Models.User")
                        .WithMany("Albums")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("Photogr.Services.Models.Photo", b =>
                {
                    b.HasOne("Photogr.Services.Models.Album")
                        .WithMany("Photos")
                        .HasForeignKey("AlbumID");
                });
#pragma warning restore 612, 618
        }
    }
}
